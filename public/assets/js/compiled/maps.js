/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(exports, \"MapRenderer\", function() { return MapRenderer; });\nvar MapRenderer = function MapRenderer (selector, options) {\n    this.selector = selector\n    this.wrld3dApiKey = window.WRLD_3D_API_KEY\n    this.mapboxKey = window.MAPBOX_KEY\n    this.markers = []\n    this.instance = null\n    this.poiApi = null\n    this.markerController = null\n    this.lat = options.lat || null\n    this.lng = options.lng || null\n\n    if (this.lat && this.lng) {\n        this.createInstance(options)\n    }\n};\n\n/**\n * Initialize a new instance of the map, be it a default Leaflet map\n * or a Wrld3D one.\n *\n * @param options\n * @returns {MapRenderer}\n */\nMapRenderer.prototype.createInstance = function createInstance (options) {\n    Object.assign(options, {}, options)\n\n    if (this.wrld3dApiKey) {\n        this.instance = L.Wrld.map(this.selector, this.wrld3dApiKey, {\n            indoorsEnabled: true,\n        })\n\n        // Add the indoor control widget. It's used to navigate in the\n        // indoor buildings provided by WRLD 3D maps.\n        new WrldIndoorControl(this.selector + '_widget', this.instance)\n\n        // Add the marker controller. It's used to show every\n        // Point of Interest on the WRLD 3D map.\n        this.markerController = new WrldMarkerController(this.instance)\n\n        // Initialize the POI API. It's used to create, edit and remove\n        // Points of Interest for every entry marker added in the\n        // entry's editing form.\n        this.poiApi = new WrldPoiApi(this.wrld3dApiKey)\n\n        this.center()\n        return this\n    }\n\n    // No WLRD 3D API KEY was set up to the current Sharing Network,\n    // so we instantiate a default Leaflet map.\n    this.instance = L.map(this.selector)\n\n    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png', {\n        attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery Â© <a href=\"http://mapbox.com\">Mapbox</a>',\n        maxZoom: 18,\n        id: 'mapbox.streets',\n        accessToken: this.mapboxKey\n    }).addTo(this.instance)\n\n    this.center()\n    return this\n};\n\nMapRenderer.prototype.setLatLng = function setLatLng (lat, lng) {\n    this.lat = parseFloat(lat)\n    this.lng = parseFloat(lng)\n\n    return this\n};\n\nMapRenderer.prototype.loadMarkers = function loadMarkers (markers, options) {\n        var this$1 = this;\n\n    options = Object.assign({}, {\n        merge: false,\n        popup: true,\n        tooltip: true,\n    }, options)\n\n    if (!options.merge) {\n        this.removeMarkers()\n    }\n\n    this.poiApi.searchTags(['anyshare_entries'], this.instance.getCenter(), function (success, results) {\n        if (!success || results.length === 0) {\n            return\n        }\n\n        results.forEach(function (item) {\n            this$1.addMapMarker(item, options)\n        })\n    }, { radius: 5000, number: 500 })\n\n    return this\n};\n\n/**\n * Item properties:\n *  - id\n *  - indoor_id\n *  - floor_id\n *  - lat\n *  - lon\n *  - title\n *  - subtitle\n *  - user_data\n *- natural_post_type\n *- image_url\n *- author_name\n *- url\n *- exchange_types\n *\n * @param item\n * @param options\n */\nMapRenderer.prototype.addMapMarker = function addMapMarker (item, options) {\n    var markerOpts = {\n        iconKey: 'pin',\n    }\n\n    if (item.indoor) {\n        markerOpts.isIndoor = true\n        markerOpts.indoorId = item.indoor_id\n        markerOpts.floorIndex = parseInt(item.floor_id)\n    }\n\n    var id = item.id || (+new Date * Math.random() + 1).toString(36).substring(2, 10)\n\n    var marker = this.markerController.addMarker(id, [item.lat, item.lon], markerOpts)\n\n    // Add a tooltip to the marker\n    if (options.tooltip) {\n        marker.bindTooltip(item.user_data.author_name + ' ' + item.user_data.natural_post_type + ' <b>' + item.title + '</b>', { permanent: false })\n    }\n\n    // Add a popup with marker's information\n    if (options.popup) {\n        var popup = '<button class=\"map-popup-link\" onclick=\"window.location.href=\\'' + item.user_data.url + '\\'\">' + item.user_data.author_name + ' ' + item.user_data.natural_post_type + ' <b>' + item.title + '</b></button><p><em>' + item.user_data.exchange_types + '</em></p>'\n        marker.bindPopup(popup)\n\n        var popup = L.DomUtil.create('div', 'map-popup')\n\n        console.log(item.user_data.image_url)\n\n        popup.innerHTML = '<div>' + (item.user_data.hasOwnProperty('image_url') ? item.user_data.image_url : '') + '</div><a href=\"' + item.user_data.url + '\" class=\"map-popup-link\">' + item.user_data.author_name + ' ' + item.user_data.natural_post_type + ' <b>' + item.title + '</b></a><p><em>' + item.user_data.exchange_types + '</em></p>'\n\n        marker.bindPopup(popup)\n    }\n\n    this.markers.push(marker)\n    return this\n};\n\nMapRenderer.prototype.removeMarkers = function removeMarkers () {\n        var this$1 = this;\n\n    this.markers.forEach(function (m) {\n        this$1.markerController.removeMarker(m.id)\n    })\n\n    this.markers = []\n};\n\nMapRenderer.prototype.precache = function precache (location) {\n    this.instance.precache(location, 1000, function () {\n        console.log('Wrld3D caching OK.')\n    })\n};\n\nMapRenderer.prototype.centerAt = function centerAt (entry) {\n    this.instance.setView([entry.lat, entry.lon], 14)\n    this.precache([entry.lat, entry.lon])\n};\n\nMapRenderer.prototype.enterBuilding = function enterBuilding (indoorId, floor) {\n    if (!indoorId) {\n        return\n    }\n\n    this.instance.indoors.enter(indoorId)\n    this.instance.indoors.setFloor(floor)\n};\n\nMapRenderer.prototype.center = function center () {\n    if (this.lat && this.lng) {\n        this.instance.setView([this.lat, this.lng], 18)\n        return this\n    }\n\n    var points = []\n\n    this.markers.forEach(function (mk) {\n        points.push([mk.getLatLng().lat, mk.getLatLng().lng])\n    })\n\n    if (points.length === 0) {\n        return this\n    }\n\n    this.instance.fitBounds(points)\n    this.precache(this.instance.getCenter())\n    return this\n};\n\n// ---------------------------------------------------------\n\nwindow.createMapRenderer = function (selector, options) {\n    return Promise.resolve(new MapRenderer(selector, options || {}))\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }
/******/ ]);