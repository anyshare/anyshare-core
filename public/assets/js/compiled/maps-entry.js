/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return MapRenderer2d; });\nvar MapRenderer2d = function MapRenderer2d (selector, options) {\n    this.type = '2d'\n    this.selector = selector\n    this.mapboxKey = window.MAPBOX_KEY\n    this.markers = []\n    this.instance = null\n    this.lat = options.lat || null\n    this.lng = options.lng || null\n\n    console.log('map2d', {\n        mapbox: this.mapboxKey,\n        lat: this.lat,\n        lng: this.lng,\n    })\n\n    if (this.mapboxKey) {\n        this.createInstance(options)\n    }\n};\n\n/**\n * Initialize a new instance of the default Leaflet map.\n *\n * @param options\n * @returns {MapRenderer}\n */\nMapRenderer2d.prototype.createInstance = function createInstance (options) {\n    Object.assign(options, {}, options)\n\n    this.instance = L.map(this.selector)\n\n    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=' + this.mapboxKey, {\n        attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery Â© <a href=\"http://mapbox.com\">Mapbox</a>',\n        maxZoom: 18,\n        id: 'mapbox.streets',\n        accessToken: this.mapboxKey\n    }).addTo(this.instance)\n\n    if (this.lat && this.lng) {\n        this.center()\n    }\n    return this\n};\n\nMapRenderer2d.prototype.setLatLng = function setLatLng (lat, lng) {\n    this.lat = parseFloat(lat)\n    this.lng = parseFloat(lng)\n\n    return this\n};\n\nMapRenderer2d.prototype.loadMarkers = function loadMarkers (markers, options) {\n        var this$1 = this;\n\n    options = Object.assign({}, {\n        merge: false,\n        popup: true,\n        tooltip: true,\n    }, options)\n\n    if (!options.merge) {\n        this.removeMarkers()\n    }\n\n    markers.forEach(function (item) {\n        this$1.addMapMarker(item, options)\n    })\n\n    return this\n};\n\n/**\n * Item properties:\n *  - id\n *  - indoor_id\n *  - floor_id\n *  - lat\n *  - lon\n *  - title\n *  - subtitle\n *  - user_data\n *- natural_post_type\n *- image_url\n *- author_name\n *- url\n *- exchange_types\n *\n * @param item\n * @param options\n */\nMapRenderer2d.prototype.addMapMarker = function addMapMarker (item, options) {\n    if (!$.isNumeric(item.lat) || !$.isNumeric(item.lon)) {\n        return\n    }\n\n    var marker = L.marker([item.lat, item.lon])\n\n    // Add a tooltip to the marker\n    if (options.tooltip) {\n        marker.bindTooltip(item.display_name + ' ' + item.natural_post_type + ' <b>' + item.title + '</b>', { permanent: false })\n    }\n\n    // Add a popup with marker's information\n    if (options.popup) {\n        var popup = '<button class=\"map-popup-link\" onclick=\"window.location.href=\\'' + item.url + '\\'\">' + item.display_name + ' ' + item.natural_post_type + ' <b>' + item.title + '</b></button><p><em>' + item.exchangeTypes + '</em></p>'\n        marker.bindPopup(popup)\n\n        var popup = L.DomUtil.create('div', 'map-popup')\n        popup.innerHTML = '<div>' + item.image + '</div><a href=\"' + item.url + '\" class=\"map-popup-link\">' + item.display_name + ' ' + item.natural_post_type + ' <b>' + item.title + '</b></a><p><em>' + item.exchangeTypes + '</em></p>'\n\n        marker.bindPopup(popup)\n    }\n\n    this.markers.push(marker)\n\n    marker.addTo(this.instance)\n\n    return this\n};\n\nMapRenderer2d.prototype.removeMarkers = function removeMarkers () {\n    this.markers.forEach(function (m) {\n        m.remove()\n    })\n\n    this.markers = []\n};\n\nMapRenderer2d.prototype.centerAt = function centerAt (entry) {\n    if (entry.lat && entry.lon) {\n        this.instance.setView([entry.lat, entry.lon], 14)\n    }\n};\n\nMapRenderer2d.prototype.center = function center () {\n    if (this.lat && this.lng) {\n        this.instance.setView([this.lat, this.lng], 18)\n        return this\n    }\n\n    var points = []\n\n    this.markers.forEach(function (mk) {\n        points.push([mk.getLatLng().lat, mk.getLatLng().lng])\n    })\n\n    if (points.length === 0) {\n        return this\n    }\n\n    this.instance.fitBounds(points)\n    return this\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL2pzL21hcHMyZC5qcz9mN2QwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBNYXBSZW5kZXJlcjJkIHtcbiAgICBjb25zdHJ1Y3RvciAoc2VsZWN0b3IsIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy50eXBlID0gJzJkJ1xuICAgICAgICB0aGlzLnNlbGVjdG9yID0gc2VsZWN0b3JcbiAgICAgICAgdGhpcy5tYXBib3hLZXkgPSB3aW5kb3cuTUFQQk9YX0tFWVxuICAgICAgICB0aGlzLm1hcmtlcnMgPSBbXVxuICAgICAgICB0aGlzLmluc3RhbmNlID0gbnVsbFxuICAgICAgICB0aGlzLmxhdCA9IG9wdGlvbnMubGF0IHx8IG51bGxcbiAgICAgICAgdGhpcy5sbmcgPSBvcHRpb25zLmxuZyB8fCBudWxsXG5cbiAgICAgICAgY29uc29sZS5sb2coJ21hcDJkJywge1xuICAgICAgICAgICAgbWFwYm94OiB0aGlzLm1hcGJveEtleSxcbiAgICAgICAgICAgIGxhdDogdGhpcy5sYXQsXG4gICAgICAgICAgICBsbmc6IHRoaXMubG5nLFxuICAgICAgICB9KVxuXG4gICAgICAgIGlmICh0aGlzLm1hcGJveEtleSkge1xuICAgICAgICAgICAgdGhpcy5jcmVhdGVJbnN0YW5jZShvcHRpb25zKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZSBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgZGVmYXVsdCBMZWFmbGV0IG1hcC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBvcHRpb25zXG4gICAgICogQHJldHVybnMge01hcFJlbmRlcmVyfVxuICAgICAqL1xuICAgIGNyZWF0ZUluc3RhbmNlIChvcHRpb25zKSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24ob3B0aW9ucywge30sIG9wdGlvbnMpXG5cbiAgICAgICAgdGhpcy5pbnN0YW5jZSA9IEwubWFwKHRoaXMuc2VsZWN0b3IpXG5cbiAgICAgICAgTC50aWxlTGF5ZXIoJ2h0dHBzOi8vYXBpLnRpbGVzLm1hcGJveC5jb20vdjQve2lkfS97en0ve3h9L3t5fS5wbmc/YWNjZXNzX3Rva2VuPScgKyB0aGlzLm1hcGJveEtleSwge1xuICAgICAgICAgICAgYXR0cmlidXRpb246ICdNYXAgZGF0YSAmY29weTsgPGEgaHJlZj1cImh0dHA6Ly9vcGVuc3RyZWV0bWFwLm9yZ1wiPk9wZW5TdHJlZXRNYXA8L2E+IGNvbnRyaWJ1dG9ycywgPGEgaHJlZj1cImh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LXNhLzIuMC9cIj5DQy1CWS1TQTwvYT4sIEltYWdlcnkgwqkgPGEgaHJlZj1cImh0dHA6Ly9tYXBib3guY29tXCI+TWFwYm94PC9hPicsXG4gICAgICAgICAgICBtYXhab29tOiAxOCxcbiAgICAgICAgICAgIGlkOiAnbWFwYm94LnN0cmVldHMnLFxuICAgICAgICAgICAgYWNjZXNzVG9rZW46IHRoaXMubWFwYm94S2V5XG4gICAgICAgIH0pLmFkZFRvKHRoaXMuaW5zdGFuY2UpXG5cbiAgICAgICAgaWYgKHRoaXMubGF0ICYmIHRoaXMubG5nKSB7XG4gICAgICAgICAgICB0aGlzLmNlbnRlcigpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXNcbiAgICB9XG5cbiAgICBzZXRMYXRMbmcgKGxhdCwgbG5nKSB7XG4gICAgICAgIHRoaXMubGF0ID0gcGFyc2VGbG9hdChsYXQpXG4gICAgICAgIHRoaXMubG5nID0gcGFyc2VGbG9hdChsbmcpXG5cbiAgICAgICAgcmV0dXJuIHRoaXNcbiAgICB9XG5cbiAgICBsb2FkTWFya2VycyAobWFya2Vycywgb3B0aW9ucykge1xuICAgICAgICBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwge1xuICAgICAgICAgICAgbWVyZ2U6IGZhbHNlLFxuICAgICAgICAgICAgcG9wdXA6IHRydWUsXG4gICAgICAgICAgICB0b29sdGlwOiB0cnVlLFxuICAgICAgICB9LCBvcHRpb25zKVxuXG4gICAgICAgIGlmICghb3B0aW9ucy5tZXJnZSkge1xuICAgICAgICAgICAgdGhpcy5yZW1vdmVNYXJrZXJzKClcbiAgICAgICAgfVxuXG4gICAgICAgIG1hcmtlcnMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5hZGRNYXBNYXJrZXIoaXRlbSwgb3B0aW9ucylcbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gdGhpc1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEl0ZW0gcHJvcGVydGllczpcbiAgICAgKiAgLSBpZFxuICAgICAqICAtIGluZG9vcl9pZFxuICAgICAqICAtIGZsb29yX2lkXG4gICAgICogIC0gbGF0XG4gICAgICogIC0gbG9uXG4gICAgICogIC0gdGl0bGVcbiAgICAgKiAgLSBzdWJ0aXRsZVxuICAgICAqICAtIHVzZXJfZGF0YVxuICAgICAqICAgIC0gbmF0dXJhbF9wb3N0X3R5cGVcbiAgICAgKiAgICAtIGltYWdlX3VybFxuICAgICAqICAgIC0gYXV0aG9yX25hbWVcbiAgICAgKiAgICAtIHVybFxuICAgICAqICAgIC0gZXhjaGFuZ2VfdHlwZXNcbiAgICAgKlxuICAgICAqIEBwYXJhbSBpdGVtXG4gICAgICogQHBhcmFtIG9wdGlvbnNcbiAgICAgKi9cbiAgICBhZGRNYXBNYXJrZXIgKGl0ZW0sIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKCEkLmlzTnVtZXJpYyhpdGVtLmxhdCkgfHwgISQuaXNOdW1lcmljKGl0ZW0ubG9uKSkge1xuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cblxuICAgICAgICB2YXIgbWFya2VyID0gTC5tYXJrZXIoW2l0ZW0ubGF0LCBpdGVtLmxvbl0pXG5cbiAgICAgICAgLy8gQWRkIGEgdG9vbHRpcCB0byB0aGUgbWFya2VyXG4gICAgICAgIGlmIChvcHRpb25zLnRvb2x0aXApIHtcbiAgICAgICAgICAgIG1hcmtlci5iaW5kVG9vbHRpcChpdGVtLmRpc3BsYXlfbmFtZSArICcgJyArIGl0ZW0ubmF0dXJhbF9wb3N0X3R5cGUgKyAnIDxiPicgKyBpdGVtLnRpdGxlICsgJzwvYj4nLCB7IHBlcm1hbmVudDogZmFsc2UgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEFkZCBhIHBvcHVwIHdpdGggbWFya2VyJ3MgaW5mb3JtYXRpb25cbiAgICAgICAgaWYgKG9wdGlvbnMucG9wdXApIHtcbiAgICAgICAgICAgIHZhciBwb3B1cCA9ICc8YnV0dG9uIGNsYXNzPVwibWFwLXBvcHVwLWxpbmtcIiBvbmNsaWNrPVwid2luZG93LmxvY2F0aW9uLmhyZWY9XFwnJyArIGl0ZW0udXJsICsgJ1xcJ1wiPicgKyBpdGVtLmRpc3BsYXlfbmFtZSArICcgJyArIGl0ZW0ubmF0dXJhbF9wb3N0X3R5cGUgKyAnIDxiPicgKyBpdGVtLnRpdGxlICsgJzwvYj48L2J1dHRvbj48cD48ZW0+JyArIGl0ZW0uZXhjaGFuZ2VUeXBlcyArICc8L2VtPjwvcD4nXG4gICAgICAgICAgICBtYXJrZXIuYmluZFBvcHVwKHBvcHVwKVxuXG4gICAgICAgICAgICB2YXIgcG9wdXAgPSBMLkRvbVV0aWwuY3JlYXRlKCdkaXYnLCAnbWFwLXBvcHVwJylcbiAgICAgICAgICAgIHBvcHVwLmlubmVySFRNTCA9ICc8ZGl2PicgKyBpdGVtLmltYWdlICsgJzwvZGl2PjxhIGhyZWY9XCInICsgaXRlbS51cmwgKyAnXCIgY2xhc3M9XCJtYXAtcG9wdXAtbGlua1wiPicgKyBpdGVtLmRpc3BsYXlfbmFtZSArICcgJyArIGl0ZW0ubmF0dXJhbF9wb3N0X3R5cGUgKyAnIDxiPicgKyBpdGVtLnRpdGxlICsgJzwvYj48L2E+PHA+PGVtPicgKyBpdGVtLmV4Y2hhbmdlVHlwZXMgKyAnPC9lbT48L3A+J1xuXG4gICAgICAgICAgICBtYXJrZXIuYmluZFBvcHVwKHBvcHVwKVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5tYXJrZXJzLnB1c2gobWFya2VyKVxuXG4gICAgICAgIG1hcmtlci5hZGRUbyh0aGlzLmluc3RhbmNlKVxuXG4gICAgICAgIHJldHVybiB0aGlzXG4gICAgfVxuXG4gICAgcmVtb3ZlTWFya2VycyAoKSB7XG4gICAgICAgIHRoaXMubWFya2Vycy5mb3JFYWNoKChtKSA9PiB7XG4gICAgICAgICAgICBtLnJlbW92ZSgpXG4gICAgICAgIH0pXG5cbiAgICAgICAgdGhpcy5tYXJrZXJzID0gW11cbiAgICB9XG5cbiAgICBjZW50ZXJBdCAoZW50cnkpIHtcbiAgICAgICAgaWYgKGVudHJ5LmxhdCAmJiBlbnRyeS5sb24pIHtcbiAgICAgICAgICAgIHRoaXMuaW5zdGFuY2Uuc2V0VmlldyhbZW50cnkubGF0LCBlbnRyeS5sb25dLCAxNClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNlbnRlciAoKSB7XG4gICAgICAgIGlmICh0aGlzLmxhdCAmJiB0aGlzLmxuZykge1xuICAgICAgICAgICAgdGhpcy5pbnN0YW5jZS5zZXRWaWV3KFt0aGlzLmxhdCwgdGhpcy5sbmddLCAxOClcbiAgICAgICAgICAgIHJldHVybiB0aGlzXG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcG9pbnRzID0gW11cblxuICAgICAgICB0aGlzLm1hcmtlcnMuZm9yRWFjaCgobWspID0+IHtcbiAgICAgICAgICAgIHBvaW50cy5wdXNoKFttay5nZXRMYXRMbmcoKS5sYXQsIG1rLmdldExhdExuZygpLmxuZ10pXG4gICAgICAgIH0pXG5cbiAgICAgICAgaWYgKHBvaW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmluc3RhbmNlLmZpdEJvdW5kcyhwb2ludHMpXG4gICAgICAgIHJldHVybiB0aGlzXG4gICAgfVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyByZXNvdXJjZXMvYXNzZXRzL2pzL21hcHMyZC5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return MapRenderer3d; });\nvar MapRenderer3d = function MapRenderer3d (selector, options) {\n    this.type = '3d'\n    this.selector = selector\n    this.wrld3dApiKey = window.WRLD_3D_API_KEY\n    this.mapboxKey = window.MAPBOX_KEY\n    this.markers = []\n    this.instance = null\n    this.poiApi = null\n    this.markerController = null\n    this.lat = options.lat || null\n    this.lng = options.lng || null\n\n    console.log('map3d', {\n        wrld3d: this.wrld3dApiKey,\n        lat: this.lat,\n        lng: this.lng,\n    })\n\n    if (this.wrld3dApiKey) {\n        this.createInstance(options)\n    }\n};\n\n/**\n * Initialize a new instance of the map, be it a default Leaflet map\n * or a Wrld3D one.\n *\n * @param options\n * @returns {MapRenderer}\n */\nMapRenderer3d.prototype.createInstance = function createInstance (options) {\n    Object.assign(options, {}, options)\n\n    this.instance = L.Wrld.map(this.selector, this.wrld3dApiKey, {\n        indoorsEnabled: true,\n    })\n\n    // Add the indoor control widget. It's used to navigate in the\n    // indoor buildings provided by WRLD 3D maps.\n    new WrldIndoorControl(this.selector + '_widget', this.instance)\n\n    // Add the marker controller. It's used to show every\n    // Point of Interest on the WRLD 3D map.\n    this.markerController = new WrldMarkerController(this.instance)\n\n    // Initialize the POI API. It's used to create, edit and remove\n    // Points of Interest for every entry marker added in the\n    // entry's editing form.\n    this.poiApi = new WrldPoiApi(this.wrld3dApiKey)\n\n    this.center()\n    return this\n};\n\nMapRenderer3d.prototype.setLatLng = function setLatLng (lat, lng) {\n    this.lat = parseFloat(lat)\n    this.lng = parseFloat(lng)\n\n    return this\n};\n\nMapRenderer3d.prototype.loadMarkers = function loadMarkers (markers, options) {\n        var this$1 = this;\n\n    options = Object.assign({}, {\n        merge: false,\n        popup: true,\n        tooltip: true,\n    }, options)\n\n    if (!options.merge) {\n        this.removeMarkers()\n    }\n\n    markers.forEach(function (mk) {\n        if (mk.poi) {\n            this$1.addMapMarker(mk.poi, options)\n        }\n    })\n\n    return this\n};\n\n/**\n * Item properties:\n *  - id\n *  - indoor_id\n *  - floor_id\n *  - lat\n *  - lon\n *  - title\n *  - subtitle\n *  - user_data\n *- natural_post_type\n *- image_url\n *- author_name\n *- url\n *- exchange_types\n *\n * @param item\n * @param options\n */\nMapRenderer3d.prototype.addMapMarker = function addMapMarker (item, options) {\n    var markerOpts = {\n        iconKey: 'pin',\n    }\n\n    if (item.indoor) {\n        markerOpts.isIndoor = true\n        markerOpts.indoorId = item.indoor_id\n        markerOpts.floorIndex = parseInt(item.floor_id)\n    }\n\n    var id = item.id || (+new Date * Math.random() + 1).toString(36).substring(2, 10)\n    var marker = this.markerController.addMarker(id, [item.lat, item.lon], markerOpts)\n\n    // Add a tooltip to the marker\n    if (options.tooltip) {\n        marker.bindTooltip(item.user_data.author_name + ' ' + item.user_data.natural_post_type + ' <b>' + item.title + '</b>', { permanent: false })\n    }\n\n    // Add a popup with marker's information\n    if (options.popup) {\n        var popup = '<button class=\"map-popup-link\" onclick=\"window.location.href=\\'' + item.user_data.url + '\\'\">' + item.user_data.author_name + ' ' + item.user_data.natural_post_type + ' <b>' + item.title + '</b></button><p><em>' + item.user_data.exchange_types + '</em></p>'\n        marker.bindPopup(popup)\n\n        var popup = L.DomUtil.create('div', 'map-popup')\n\n        popup.innerHTML = '<div>' + (item.user_data.hasOwnProperty('image_url') ? item.user_data.image_url : '') + '</div><a href=\"' + item.user_data.url + '\" class=\"map-popup-link\">' + item.user_data.author_name + ' ' + item.user_data.natural_post_type + ' <b>' + item.title + '</b></a><p><em>' + item.user_data.exchange_types + '</em></p>'\n\n        marker.bindPopup(popup)\n    }\n\n    this.markers.push(marker)\n    return this\n};\n\nMapRenderer3d.prototype.removeMarkers = function removeMarkers () {\n        var this$1 = this;\n\n    this.markers.forEach(function (m) {\n        this$1.markerController.removeMarker(m.id)\n    })\n\n    this.markers = []\n};\n\nMapRenderer3d.prototype.precache = function precache (location) {\n    this.instance.precache(location, 1000, function () {\n        console.log('Wrld3D caching OK.')\n    })\n};\n\nMapRenderer3d.prototype.centerAt = function centerAt (entry) {\n    this.instance.setView([entry.lat, entry.lon], 14)\n    this.precache([entry.lat, entry.lon])\n};\n\nMapRenderer3d.prototype.enterBuilding = function enterBuilding (indoorId, floor) {\n    if (!indoorId) {\n        return\n    }\n\n    this.instance.indoors.enter(indoorId)\n    this.instance.indoors.setFloor(floor)\n};\n\nMapRenderer3d.prototype.center = function center () {\n    if (this.lat && this.lng) {\n        this.instance.setView([this.lat, this.lng], 18)\n        return this\n    }\n\n    var points = []\n\n    this.markers.forEach(function (mk) {\n        points.push([mk.getLatLng().lat, mk.getLatLng().lng])\n    })\n\n    if (points.length === 0) {\n        return this\n    }\n\n    this.instance.fitBounds(points)\n    this.precache(this.instance.getCenter())\n    return this\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__maps3d__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__maps2d__ = __webpack_require__(0);\n\n\n\n/**\n * Prepare an indoors object.\n *\n * @param entry\n * @returns {{id: null, floor: null}}\n */\nfunction prepareEntryIndoors (entry) {\n    if (!entry.indoors) {\n        return {\n            id: null,\n            floor: null,\n        }\n    }\n\n    return indoors = {\n        id: entry.indoors.id || null,\n        floor: entry.indoors.floor || null,\n    }\n}\n\n/**\n * Handle the map viewing.\n *\n * @param map\n * @param entry\n */\nfunction handleViewing (map, entry) {\n    if (map.type === '3d' && entry.indoor) {\n        map.instance.indoors.on('indoorentranceadd', function () {\n            map.centerAt(entry)\n            map.enterBuilding(entry.indoor_id, entry.floor_id)\n        })\n\n        map.instance.indoors.on('indoormapenter', function () {\n            map.addMapMarker(entry, { popup: false, tooltip: false })\n        })\n\n        return\n    }\n\n    map.centerAt(entry)\n    map.addMapMarker(entry, { popup: false, tooltip: false })\n}\n\n/**\n * Handle the marker editing feature.\n *\n * @param map\n * @param entry\n */\nfunction handleEditing (map, entry) {\n    /*\n     * When the user does a double click on the map,\n     *we update the entry's geolocation.\n     */\n    map.instance.on('dblclick', function (ev) {\n        /*\n         * Set some required data for the entry.\n         */\n        entry.location = ''\n        entry.lat = ev.latlng.lat\n        entry.lon = ev.latlng.lng\n\n        $('#location').val(entry.location)\n        $('#location_lat').val(entry.lat)\n        $('#location_lng').val(entry.lon)\n\n        /*\n         * Set up some indoor map stuff if the map is a 3D one.\n         */\n        if (map.type === '3d') {\n            var indoor = map.instance.indoors.getActiveIndoorMap()\n            var floor = map.instance.indoors.getFloor()\n\n            /*\n             * We can have a lot of entries already added before\n             * the Map stuff is added, so we have to ensure that\n             * the entry has the need indoors data.\n             */\n            prepareEntryIndoors(entry)\n\n            entry.indoor = indoor\n            entry.indoor_id = indoor === null ? '' : indoor.getIndoorMapId()\n            entry.floor_id = indoor === null ? '' : floor.getFloorIndex()\n\n            $('#indoors_id').val(entry.indoor_id)\n            $('#indoors_floor').val(entry.floor_id)\n        }\n\n        /*\n         * Clean up the existent marker and add up the new one.\n         */\n        map.removeMarkers()\n        map.addMapMarker(entry, { popup: false, tooltip: false })\n    })\n}\n\n/**\n * Initialize the entry map in the frontend site.\n *\n * @param entry\n * @param community\n */\nwindow.initializeEntryMap = function (entry, community, options) {\n    if (!community) {\n        return\n    }\n\n    /*\n     * Instantiate the map renderer\n     */\n    var mapOptions = {\n        loadPois: false,\n        lat: parseFloat(community.lat),\n        lng: parseFloat(community.lng),\n    }\n\n    var map = (community.wrld3d && community.wrld3d.api_key)\n        ? new __WEBPACK_IMPORTED_MODULE_0__maps3d__[\"a\" /* MapRenderer3d */]('entry_browse_map', mapOptions)\n        : new __WEBPACK_IMPORTED_MODULE_1__maps2d__[\"a\" /* MapRenderer2d */]('entry_browse_map', mapOptions)\n\n    /*\n     * Set some required data for the entry.\n     */\n    entry.lon = entry.lng\n    entry.indoor = (entry.wrld3d && entry.wrld3d.indoor_id)\n    entry.indoor_id = entry.wrld3d ? entry.wrld3d.indoor_id : null\n    entry.floor_id = entry.wrld3d ? entry.wrld3d.indoor_floor : null\n\n    entry.user_data = {\n        description: entry.description,\n        image_url: entry.image_url,\n        author_name: entry.display_name,\n        natural_post_type: entry.natural_post_type,\n        exchanges_types: entry.exchangesTypes,\n        url: entry.url,\n    }\n\n    handleViewing(map, entry)\n\n    /*\n     * Enables the market editing when it's requested.\n     */\n    if (options.editable) {\n        handleEditing(map, entry)\n    }\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL2pzL21hcHMtZW50cnkuanM/ZjkwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYXBSZW5kZXJlcjNkIH0gZnJvbSAnLi9tYXBzM2QnXG5pbXBvcnQgeyBNYXBSZW5kZXJlcjJkIH0gZnJvbSAnLi9tYXBzMmQnXG5cbi8qKlxuICogUHJlcGFyZSBhbiBpbmRvb3JzIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0gZW50cnlcbiAqIEByZXR1cm5zIHt7aWQ6IG51bGwsIGZsb29yOiBudWxsfX1cbiAqL1xuZnVuY3Rpb24gcHJlcGFyZUVudHJ5SW5kb29ycyAoZW50cnkpIHtcbiAgICBpZiAoIWVudHJ5LmluZG9vcnMpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGlkOiBudWxsLFxuICAgICAgICAgICAgZmxvb3I6IG51bGwsXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gaW5kb29ycyA9IHtcbiAgICAgICAgaWQ6IGVudHJ5LmluZG9vcnMuaWQgfHwgbnVsbCxcbiAgICAgICAgZmxvb3I6IGVudHJ5LmluZG9vcnMuZmxvb3IgfHwgbnVsbCxcbiAgICB9XG59XG5cbi8qKlxuICogSGFuZGxlIHRoZSBtYXAgdmlld2luZy5cbiAqXG4gKiBAcGFyYW0gbWFwXG4gKiBAcGFyYW0gZW50cnlcbiAqL1xuZnVuY3Rpb24gaGFuZGxlVmlld2luZyAobWFwLCBlbnRyeSkge1xuICAgIGlmIChtYXAudHlwZSA9PT0gJzNkJyAmJiBlbnRyeS5pbmRvb3IpIHtcbiAgICAgICAgbWFwLmluc3RhbmNlLmluZG9vcnMub24oJ2luZG9vcmVudHJhbmNlYWRkJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgbWFwLmNlbnRlckF0KGVudHJ5KVxuICAgICAgICAgICAgbWFwLmVudGVyQnVpbGRpbmcoZW50cnkuaW5kb29yX2lkLCBlbnRyeS5mbG9vcl9pZClcbiAgICAgICAgfSlcblxuICAgICAgICBtYXAuaW5zdGFuY2UuaW5kb29ycy5vbignaW5kb29ybWFwZW50ZXInLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBtYXAuYWRkTWFwTWFya2VyKGVudHJ5LCB7IHBvcHVwOiBmYWxzZSwgdG9vbHRpcDogZmFsc2UgfSlcbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBtYXAuY2VudGVyQXQoZW50cnkpXG4gICAgbWFwLmFkZE1hcE1hcmtlcihlbnRyeSwgeyBwb3B1cDogZmFsc2UsIHRvb2x0aXA6IGZhbHNlIH0pXG59XG5cbi8qKlxuICogSGFuZGxlIHRoZSBtYXJrZXIgZWRpdGluZyBmZWF0dXJlLlxuICpcbiAqIEBwYXJhbSBtYXBcbiAqIEBwYXJhbSBlbnRyeVxuICovXG5mdW5jdGlvbiBoYW5kbGVFZGl0aW5nIChtYXAsIGVudHJ5KSB7XG4gICAgLypcbiAgICAgKiBXaGVuIHRoZSB1c2VyIGRvZXMgYSBkb3VibGUgY2xpY2sgb24gdGhlIG1hcCxcbiAgICAgKndlIHVwZGF0ZSB0aGUgZW50cnkncyBnZW9sb2NhdGlvbi5cbiAgICAgKi9cbiAgICBtYXAuaW5zdGFuY2Uub24oJ2RibGNsaWNrJywgKGV2KSA9PiB7XG4gICAgICAgIC8qXG4gICAgICAgICAqIFNldCBzb21lIHJlcXVpcmVkIGRhdGEgZm9yIHRoZSBlbnRyeS5cbiAgICAgICAgICovXG4gICAgICAgIGVudHJ5LmxvY2F0aW9uID0gJydcbiAgICAgICAgZW50cnkubGF0ID0gZXYubGF0bG5nLmxhdFxuICAgICAgICBlbnRyeS5sb24gPSBldi5sYXRsbmcubG5nXG5cbiAgICAgICAgJCgnI2xvY2F0aW9uJykudmFsKGVudHJ5LmxvY2F0aW9uKVxuICAgICAgICAkKCcjbG9jYXRpb25fbGF0JykudmFsKGVudHJ5LmxhdClcbiAgICAgICAgJCgnI2xvY2F0aW9uX2xuZycpLnZhbChlbnRyeS5sb24pXG5cbiAgICAgICAgLypcbiAgICAgICAgICogU2V0IHVwIHNvbWUgaW5kb29yIG1hcCBzdHVmZiBpZiB0aGUgbWFwIGlzIGEgM0Qgb25lLlxuICAgICAgICAgKi9cbiAgICAgICAgaWYgKG1hcC50eXBlID09PSAnM2QnKSB7XG4gICAgICAgICAgICB2YXIgaW5kb29yID0gbWFwLmluc3RhbmNlLmluZG9vcnMuZ2V0QWN0aXZlSW5kb29yTWFwKClcbiAgICAgICAgICAgIHZhciBmbG9vciA9IG1hcC5pbnN0YW5jZS5pbmRvb3JzLmdldEZsb29yKClcblxuICAgICAgICAgICAgLypcbiAgICAgICAgICAgICAqIFdlIGNhbiBoYXZlIGEgbG90IG9mIGVudHJpZXMgYWxyZWFkeSBhZGRlZCBiZWZvcmVcbiAgICAgICAgICAgICAqIHRoZSBNYXAgc3R1ZmYgaXMgYWRkZWQsIHNvIHdlIGhhdmUgdG8gZW5zdXJlIHRoYXRcbiAgICAgICAgICAgICAqIHRoZSBlbnRyeSBoYXMgdGhlIG5lZWQgaW5kb29ycyBkYXRhLlxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBwcmVwYXJlRW50cnlJbmRvb3JzKGVudHJ5KVxuXG4gICAgICAgICAgICBlbnRyeS5pbmRvb3IgPSBpbmRvb3JcbiAgICAgICAgICAgIGVudHJ5LmluZG9vcl9pZCA9IGluZG9vciA9PT0gbnVsbCA/ICcnIDogaW5kb29yLmdldEluZG9vck1hcElkKClcbiAgICAgICAgICAgIGVudHJ5LmZsb29yX2lkID0gaW5kb29yID09PSBudWxsID8gJycgOiBmbG9vci5nZXRGbG9vckluZGV4KClcblxuICAgICAgICAgICAgJCgnI2luZG9vcnNfaWQnKS52YWwoZW50cnkuaW5kb29yX2lkKVxuICAgICAgICAgICAgJCgnI2luZG9vcnNfZmxvb3InKS52YWwoZW50cnkuZmxvb3JfaWQpXG4gICAgICAgIH1cblxuICAgICAgICAvKlxuICAgICAgICAgKiBDbGVhbiB1cCB0aGUgZXhpc3RlbnQgbWFya2VyIGFuZCBhZGQgdXAgdGhlIG5ldyBvbmUuXG4gICAgICAgICAqL1xuICAgICAgICBtYXAucmVtb3ZlTWFya2VycygpXG4gICAgICAgIG1hcC5hZGRNYXBNYXJrZXIoZW50cnksIHsgcG9wdXA6IGZhbHNlLCB0b29sdGlwOiBmYWxzZSB9KVxuICAgIH0pXG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZSB0aGUgZW50cnkgbWFwIGluIHRoZSBmcm9udGVuZCBzaXRlLlxuICpcbiAqIEBwYXJhbSBlbnRyeVxuICogQHBhcmFtIGNvbW11bml0eVxuICovXG53aW5kb3cuaW5pdGlhbGl6ZUVudHJ5TWFwID0gZnVuY3Rpb24gKGVudHJ5LCBjb21tdW5pdHksIG9wdGlvbnMpIHtcbiAgICBpZiAoIWNvbW11bml0eSkge1xuICAgICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvKlxuICAgICAqIEluc3RhbnRpYXRlIHRoZSBtYXAgcmVuZGVyZXJcbiAgICAgKi9cbiAgICBjb25zdCBtYXBPcHRpb25zID0ge1xuICAgICAgICBsb2FkUG9pczogZmFsc2UsXG4gICAgICAgIGxhdDogcGFyc2VGbG9hdChjb21tdW5pdHkubGF0KSxcbiAgICAgICAgbG5nOiBwYXJzZUZsb2F0KGNvbW11bml0eS5sbmcpLFxuICAgIH1cblxuICAgIGNvbnN0IG1hcCA9IChjb21tdW5pdHkud3JsZDNkICYmIGNvbW11bml0eS53cmxkM2QuYXBpX2tleSlcbiAgICAgICAgPyBuZXcgTWFwUmVuZGVyZXIzZCgnZW50cnlfYnJvd3NlX21hcCcsIG1hcE9wdGlvbnMpXG4gICAgICAgIDogbmV3IE1hcFJlbmRlcmVyMmQoJ2VudHJ5X2Jyb3dzZV9tYXAnLCBtYXBPcHRpb25zKVxuXG4gICAgLypcbiAgICAgKiBTZXQgc29tZSByZXF1aXJlZCBkYXRhIGZvciB0aGUgZW50cnkuXG4gICAgICovXG4gICAgZW50cnkubG9uID0gZW50cnkubG5nXG4gICAgZW50cnkuaW5kb29yID0gKGVudHJ5LndybGQzZCAmJiBlbnRyeS53cmxkM2QuaW5kb29yX2lkKVxuICAgIGVudHJ5LmluZG9vcl9pZCA9IGVudHJ5LndybGQzZCA/IGVudHJ5LndybGQzZC5pbmRvb3JfaWQgOiBudWxsXG4gICAgZW50cnkuZmxvb3JfaWQgPSBlbnRyeS53cmxkM2QgPyBlbnRyeS53cmxkM2QuaW5kb29yX2Zsb29yIDogbnVsbFxuXG4gICAgZW50cnkudXNlcl9kYXRhID0ge1xuICAgICAgICBkZXNjcmlwdGlvbjogZW50cnkuZGVzY3JpcHRpb24sXG4gICAgICAgIGltYWdlX3VybDogZW50cnkuaW1hZ2VfdXJsLFxuICAgICAgICBhdXRob3JfbmFtZTogZW50cnkuZGlzcGxheV9uYW1lLFxuICAgICAgICBuYXR1cmFsX3Bvc3RfdHlwZTogZW50cnkubmF0dXJhbF9wb3N0X3R5cGUsXG4gICAgICAgIGV4Y2hhbmdlc190eXBlczogZW50cnkuZXhjaGFuZ2VzVHlwZXMsXG4gICAgICAgIHVybDogZW50cnkudXJsLFxuICAgIH1cblxuICAgIGhhbmRsZVZpZXdpbmcobWFwLCBlbnRyeSlcblxuICAgIC8qXG4gICAgICogRW5hYmxlcyB0aGUgbWFya2V0IGVkaXRpbmcgd2hlbiBpdCdzIHJlcXVlc3RlZC5cbiAgICAgKi9cbiAgICBpZiAob3B0aW9ucy5lZGl0YWJsZSkge1xuICAgICAgICBoYW5kbGVFZGl0aW5nKG1hcCwgZW50cnkpXG4gICAgfVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyByZXNvdXJjZXMvYXNzZXRzL2pzL21hcHMtZW50cnkuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTs7Ozs7QUFLQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7OzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }
/******/ ]);